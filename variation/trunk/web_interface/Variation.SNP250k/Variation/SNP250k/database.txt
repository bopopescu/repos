================ 
 Database tests
================ 

This doctest demonstrates the database-integration functionality in db.py,
screening.py and reservation.py. It depends on a MySQL database called
optilux_text being available on localhost, accessible as user "root" with
no password. This database should be empty. Because the test framework will 
roll back the transaction before at the end of the test, it should remain
empty.

We will not explicitly clear the database before commencing execution, 
just in case there is data there that shouldn't be deleted. However, if
the database is not empty, you will probably get test failures!

Connecting to the database
--------------------------

First, we must configure the local utility which stores the database 
connection settings.

    >>> self.loginAsPortalOwner()

    >>> from zope.component import getUtility
    >>> from Variation.SNP250k.interfaces import IStockDatabaseSettings
 
    >>> settings = getUtility(IStockDatabaseSettings, name='variation.stockdatabasesettings')

    >>> settings.drivername = 'mysql'
    >>> settings.username = 'nordborglab'
    >>> settings.password = 'papaya'
    >>> settings.hostname = 'papaya.usc.edu'
    >>> settings.database = 'stock_250k'
 
We should now be able to make a connection.

    >>> from collective.lead.interfaces import IDatabase
    >>> db = getUtility(IDatabase, name='variation.stockdatabase')
    
    >>> from zope.interface import implements
    >>> from Variation.SNP250k.interfaces import IDBLocator
    >>> locator = getUtility(IDBLocator)
    
    >>> v = locator.get_phenotype_method_id_ls()
	>>> v[1][1]
	2L

The last v[1][1] is the 2nd method id in table phenotype_method.

Sample content
--------------
